<?php

/**
 * @file
 * Contains real_estate_property.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\real_estate_property\Entity\PropertyTypeInterface;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_help().
 */
function real_estate_property_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the real_estate_property module.
    case 'help.page.real_estate_property':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Property') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function real_estate_property_theme() {
  $theme = [];
  $theme['real_estate_property'] = [
    'render element' => 'elements',
    'file' => 'real_estate_property.page.inc',
    'template' => 'real-estate-property',
  ];
  $theme['real_estate_property_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'real_estate_property.page.inc',
  ];
  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function real_estate_property_theme_suggestions_real_estate_property(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#real_estate_property'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'real_estate_property__' . $sanitized_view_mode;
  $suggestions[] = 'real_estate_property__' . $entity->bundle();
  $suggestions[] = 'real_estate_property__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'real_estate_property__' . $entity->id();
  $suggestions[] = 'real_estate_property__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Adds the default agencies field to a property.
 *
 * @param \Drupal\real_estate_property\Entity\PropertyTypeInterface $property_type
 *   The property type.
 *
 * @return \Drupal\field\Entity\FieldConfig
 *   A Agency field object.
 */
function real_estate_property_add_agencies_field(PropertyTypeInterface $property_type) {

  // Add or remove the agencies field, as needed.
  $field_storage = FieldStorageConfig::loadByName('real_estate_property', 'agencies');
  $field = FieldConfig::loadByName('real_estate_property', $property_type->id(), 'agencies');
  if (empty($field)) {
    $field = FieldConfig::create([
      'field_storage' => $field_storage,
      'bundle' => $property_type->id(),
      'label' => 'Agency',
      'field_name' => 'agencies',
      'settings' => ['display_summary' => TRUE],
    ]);
    $field->save();
  }

  // Assign widget settings for the 'default' form mode.
  $entityDisplayRepository = \Drupal::service('entity_display.repository');
  $entityDisplayRepository->getFormDisplay($property_type->id(), 'default')
    ->setComponent('agencies', [
      'type' => 'entity_reference_autocomplete',
      'weight' => -10,
    ])
    ->save();

  return $field;
}

/**
 * Prevents validation of decimal numbers.
 *
 * @see https://www.drupal.org/node/2230909
 */
function real_estate_property_field_widget_form_alter(&$element, FormStateInterface $form_state, $context) {
  $field_definition = $context['items']->getFieldDefinition();
  if ($field_definition->getType() == 'decimal') {
    $element['value']['#step'] = 'any';
  }
}
